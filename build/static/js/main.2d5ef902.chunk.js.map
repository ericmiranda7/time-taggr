{"version":3,"sources":["components/NavigationBar.js","reducers/timerReducer.js","services/tagService.js","reducers/tagsReducer.js","components/Timer.js","components/Settings.js","App.js","store.js","index.js"],"names":["NavigationBar","Navbar","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Divider","initialState","startTime","running","duration","diff","hours","minutes","seconds","completedTime","expired","stopped","pause","interval","setDuration","tag","type","payload","timerReducer","state","action","Date","now","clearInterval","services","getAll","a","axios","get","response","data","name","color","isSelected","setBreakDuration","setTagDuration","tagName","tagsReducer","console","log","tags","concat","map","Clock","timer","styles","clock","height","width","display","justifyContent","alignItems","borderStyle","borderWidth","fontSize","style","ControlButton","text","handleClick","Button","onClick","TimerControls","dispatch","selectedTag","handleStopClick","stopTimer","setInterval","resumeTimer","startTimer","Timer","useSelector","find","useDispatch","useEffect","textAlign","spanAlignCenter","DurationForm","breakTime","breakTag","selectedTagTime","hoursChangeHandler","event","target","includes","Number","value","minutesChangeHandler","clearInput","onChange","onBlur","placeholder","TagSelect","makeSelected","defaultValue","filter","i","AddTag","onKeyDown","key","addTag","Settings","Card","Header","ListGroup","App","tagService","combinedReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d5ef902.chunk.js","sourcesContent":["import { Navbar, Nav, NavDropdown } from 'react-bootstrap'\n\nconst NavigationBar = () => {\n  return (\n    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n      <Navbar.Brand href=\"#home\">Time-Taggr</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">Home</Nav.Link>\n          <Nav.Link href=\"#link\">Link</Nav.Link>\n          <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nexport default NavigationBar","const initialState = {\n  startTime: null,\n  running: false,\n  duration: null,\n  diff: null,\n  hours: null,\n  minutes: null,\n  seconds: null,\n  completedTime: 0,\n  expired: null,\n  stopped: null,\n  pause: null,\n}\n\n// timer interval\nlet interval = null\n\n// setters\nexport const setDuration = tag => {\n  const duration = tag.duration * 60\n  return {\n    type: 'SET_DURATION',\n    payload: { duration }\n  }\n}\n\nexport const startTimer = dispatch => {\n  dispatch({ type: 'START_TIMER' })\n  dispatch({ type: 'TICK' })\n\n  interval = setInterval(() => {\n    dispatch({ type: 'TICK' })\n  }, 1000)\n}\n\nexport const stopTimer = (dispatch, tag) => {\n  clearInterval(interval)\n  dispatch(setDuration(tag))\n  dispatch({ type: 'STOP_TIMER' })\n}\n\nexport const pauseTimer = () => {\n  return { type: 'PAUSE_TIMER' }\n}\n\nexport const resumeTimer = (dispatch) => {\n  dispatch({ type: 'RESUME_TIMER' })\n  dispatch({ type: 'TICK' })\n\n  interval = setInterval(() => {\n    dispatch({ type: 'TICK' })\n  }, 1000)\n}\n\nexport const consumeCompletedTime = () => {\n  return { type: 'CONSUME_COMPLETED_TIME' }\n}\n\nconst timerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_DURATION': {\n      const duration = action.payload?.duration || state.duration\n      let hours = (duration / 3600) | 0\n      let minutes = ((duration / 60 | 0) % 60)\n      let seconds = '00'\n\n      minutes = minutes < 10 ? '0' + minutes : minutes\n      hours = hours < 10 ? '0' + hours : hours\n      return { ...state, duration, hours, minutes, seconds, running: false }\n    }\n\n    case 'START_TIMER': {\n      const startTime = Date.now()\n\n      return { ...state, startTime, running: true }\n    }\n\n    case 'TICK': {\n      const diff = state.duration - (((Date.now() - state.startTime) / 1000) | 0)\n\n      let hours = (diff / 3600) | 0\n      let minutes = (((diff / 60)) | 0) % 60\n      let seconds = (diff % 60) | 0\n\n      hours = hours < 10 ? \"0\" + hours : hours\n      minutes = minutes < 10 ? \"0\" + minutes : minutes\n      seconds = seconds < 10 ? \"0\" + seconds : seconds\n\n      let expired = false, completedTime\n      if (diff <= 0) {\n        expired = true\n        clearInterval(interval)\n        // if naturally expired,  completed time is duration of timer\n        completedTime = state.duration\n      }\n\n      return { ...state, diff, hours, minutes, seconds, completedTime, expired }\n    }\n\n    case 'STOP_TIMER': {\n      // compute completed time\n      const completedTime = state.duration - state.diff\n      return { ...state, completedTime, stopped: true, running: false, pause: null}\n    }\n\n    case 'PAUSE_TIMER': {\n      clearInterval(interval)\n      return { ...state, pause: Date.now(), running: false }\n    }\n\n    case 'RESUME_TIMER': {\n      const startTime = (Date.now() - state.pause) + state.startTime\n\n      return { ...state, startTime, running: true }\n    }\n\n    case 'CONSUME_COMPLETED_TIME': {\n      return { ...state, expired: false, stopped: false }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport default timerReducer","import axios from 'axios'\n\nconst baseUrl = '/api/tags'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst services = { getAll }\n\nexport default services","import tagService from '../services/tagService'\n\nconst initialState = [\n  {\n    name: 'Study',\n    color: 'blue',\n    isSelected: true,\n    duration: 25,\n    completedTime: 0\n  },\n  {\n    name: 'Read',\n    color: 'green',\n    isSelected: false,\n    duration: 25,\n    completedTime: 0,\n  },\n  {\n    name: 'Break',\n    color: 'white',\n    isSelected: false,\n    duration: 70,\n    completedTime: 0,\n  }\n]\n\nexport const getAllTags = () => {\n  return async dispatch => {\n    const tags = await tagService.getAll()\n    dispatch({ type: 'INIT_TAG', payload: { tags } })\n  }\n}\n\nexport const addTag = (tag) => {\n  return {\n    type: 'ADD_TAG',\n    payload: { tag: { ...tag, completedTime: 0, duration: 25 } }\n  }\n}\n\nexport const makeSelected = tagName => {\n  return {\n    type: 'MAKE_SELECTED',\n    payload: { tagName }\n  }\n}\n\nexport const setBreakDuration = (duration) => {\n  return setTagDuration(duration, 'Break')\n}\n\nexport const setTagDuration = (duration, tagName) => {\n  return {\n    type: 'SET_TAG_DURATION',\n    payload: { duration, tagName }\n  }\n}\n\nexport const addCompletedTime = (tagName, completedTime) => {\n  return {\n    type: 'ADD_COMPLETION',\n    payload: { tagName, completedTime }\n  }\n}\n\nconst tagsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INIT_TAG':\n      console.log(...action.payload.tags)\n      return [...action.payload.tags]\n\n    case 'ADD_TAG':\n      return state.concat(action.payload.tag)\n\n    case 'MAKE_SELECTED':\n      return state.map(tag => tag.name === action.payload.tagName ? { ...tag, isSelected: true } : { ...tag, isSelected: false })\n\n    case 'SET_TAG_DURATION':\n      if (action.payload.tagName === 'Break') return state.map(tag => tag.name === 'Break' ? { ...tag, duration: action.payload.duration } : tag)\n      else return state.map(tag => tag.isSelected ? { ...tag, duration: action.payload.duration } : tag)\n\n    case 'ADD_COMPLETION':\n      return state.map(tag => tag.name === action.payload.tagName ? { ...tag, completedTime: tag.completedTime + action.payload.completedTime } : tag)\n\n    default:\n      return state\n  }\n\n}\n\nexport default tagsReducer","import { useSelector, useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport { startTimer, stopTimer, pauseTimer, consumeCompletedTime, setDuration, resumeTimer } from '../reducers/timerReducer'\nimport { addCompletedTime } from '../reducers/tagsReducer'\nimport { Button } from 'react-bootstrap'\n\nconst Clock = ({ timer }) => {\n  const styles = {\n    clock: {\n      height: '350px',\n      width: '350px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderStyle: 'solid',\n      borderWidth: '0.5em'\n    },\n    'time-text': {\n      fontSize: '50px'\n    }\n  }\n\n  return (\n    <div className=\"mx-auto rounded-circle\" style={styles.clock}>\n      <p className=\"mb-0\" style={styles['time-text']}>{timer.hours}:{timer.minutes}:{timer.seconds}</p>\n    </div>\n  )\n}\n\nconst ControlButton = ({ variant, text, handleClick }) => {\n  return (\n    <Button variant={variant} className=\"mx-auto mb-1\" onClick={handleClick} style={{ width: '175px', display: 'block' }}>{text}</Button>\n  )\n}\n\nconst TimerControls = ({ timer, dispatch, selectedTag }) => {\n  const handleStartClick = () => startTimer(dispatch)\n  const handleStopClick = () => stopTimer(dispatch, selectedTag)\n  const handlePauseClick = () => dispatch(pauseTimer())\n  const handleResumeClick = () => resumeTimer(dispatch)\n\n  if (!timer.running) {\n    return (\n      <div>\n        {timer.pause\n          ? <div>\n            <ControlButton variant=\"primary\" text=\"Resume\" handleClick={handleResumeClick} />\n            <ControlButton variant=\"danger\" text=\"Stop\" handleClick={handleStopClick} />\n          </div>\n          : <ControlButton variant=\"primary\" text=\"Start\" handleClick={handleStartClick} />}\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <ControlButton variant=\"primary\" text=\"Pause\" handleClick={handlePauseClick} />\n        <ControlButton variant=\"danger\" text=\"Stop\" handleClick={handleStopClick} />\n      </div>\n    )\n  }\n}\n\nconst Timer = () => {\n  const timer = useSelector(state => state.timer)\n  const selectedTag = useSelector(({ tags }) => {\n    return tags.find(tag => {\n      return tag.isSelected\n    })\n  })\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(setDuration(selectedTag || 0))\n  }, [dispatch, selectedTag])\n\n  useEffect(() => {\n    /*     if (timer.completedTime > 0 && timer.expired) {\n          dispatch(addCompletedTime(selectedTag?.name, timer.completedTime))\n          dispatch(consumeCompletedTime())\n        } */\n\n    // if expired OR stopped, getCompletedTime\n    if (timer.expired || timer.stopped) {\n      dispatch(addCompletedTime(selectedTag?.name, timer.completedTime))\n      dispatch(consumeCompletedTime())\n    }\n  }, [dispatch, selectedTag, timer])\n\n  return (\n    <div>\n      <Clock timer={timer} />\n      <div className=\"align-items-center mt-3\">\n        <TimerControls timer={timer} dispatch={dispatch} selectedTag={selectedTag} />\n        <p className=\"text-center\">Completed time tag: {selectedTag?.completedTime} seconds</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Timer","import { Card, ListGroup } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { makeSelected, addTag, setBreakDuration, setTagDuration } from '../reducers/tagsReducer'\n\nconst styles = {\n  duration: {\n    width: '4em',\n    textAlign: 'right'\n  },\n  spanAlignCenter: {\n    alignItems: 'center'\n  }\n}\n\nconst DurationForm = ({selectedTag}) => {\n  const timer = useSelector(state => state.timer)\n  const breakTime = useSelector(state => {\n    const breakTag = state.tags.find(tag => tag.name === 'Break')\n    return {\n      minutes: breakTag.duration % 60,\n      hours: (breakTag.duration / 60 | 0)\n    }\n  })\n  const selectedTagTime = {\n    minutes: selectedTag.duration % 60,\n    hours: (selectedTag.duration / 60 | 0)\n  }\n  const dispatch = useDispatch()\n\n  const hoursChangeHandler = (event) => {\n    if (event.target.name.includes('break')) {\n      const duration = Number(event.target.value) * 60 + breakTime.minutes\n      dispatch(setBreakDuration(duration))\n    }\n    else {\n      const duration = Number(event.target.value) * 60 + Number(selectedTagTime.minutes)\n      dispatch(setTagDuration(duration))\n    }\n  }\n\n  const minutesChangeHandler = (event) => {\n    if (event.target.name.includes('break')) {\n      const duration = breakTime.hours * 60 + Number(event.target.value)\n      dispatch(setBreakDuration(duration))\n    }\n    else {\n      const duration = Number(event.target.value) + (Number(selectedTagTime.hours) * 60)\n      dispatch(setTagDuration(duration))\n    }\n\n    if (event.target.value > 59) event.target.value = ''\n  }\n\n  const clearInput = (event) => event.target.value = ''\n\n  return (\n    <div className=\"d-flex justify-content-end flex-column\">\n      <div className=\"d-flex flex-row\">\n        <span className=\"d-inline-flex flex-grow-1\" style={styles.spanAlignCenter} >Work</span>\n        <input className=\"mr-1\" type=\"number\" onChange={hoursChangeHandler} onBlur={clearInput} style={styles.duration} name=\"hours\" placeholder={timer.hours + 'H'} />\n        <input type=\"number\" onChange={minutesChangeHandler} onBlur={clearInput} style={styles.duration} name=\"minutes\" placeholder={timer.minutes + 'M'} />\n      </div>\n      <div className=\"d-flex flex-row mt-1\">\n        <span className=\"d-inline-flex flex-grow-1\" style={styles.spanAlignCenter} >Break</span>\n        <input className=\"mr-1\" type=\"number\" onBlur={clearInput} onChange={hoursChangeHandler} style={styles.duration} name=\"breakHours\" placeholder={breakTime.hours + 'H'} />\n        <input type=\"number\" onChange={minutesChangeHandler} onBlur={clearInput} style={styles.duration} name=\"breakMinutes\" placeholder={breakTime.minutes + 'M'} />\n      </div>\n    </div>\n  )\n}\n\nconst TagSelect = () => {\n  const tags = useSelector(state => state.tags)\n  const dispatch = useDispatch()\n\n  const onTagSelected = event => {\n    const tagName = event.target.value\n    dispatch(makeSelected(tagName))\n  }\n\n  return (\n    <div className=\"d-flex\">\n      <span className=\"flex-grow-1\" >Select Tag</span>\n      <select onChange={onTagSelected} style={{ width: '8.2em' }} defaultValue={tags.filter(tag => tag.isSelected).name}>\n        {tags.map((tag, i) => <option key={i} value={tag.name}>{tag.name}</option>)}\n      </select>\n    </div>\n  )\n}\n\nconst AddTag = () => {\n  const dispatch = useDispatch()\n\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      const tag = {\n        name: event.target.value,\n        color: 'gray',\n      }\n      event.target.value = ''\n      dispatch(addTag(tag))\n    }\n  }\n\n  return (\n    <div className=\"d-flex\">\n      <span className=\"d-inline-flex flex-grow-1\" style={styles.spanAlignCenter}>Add Tag</span>\n      <input className=\"\" style={{ width: '8.2em' }} onKeyDown={handleKeyDown}></input>\n    </div>\n  )\n}\n\nconst Settings = () => {\n  const selectedTag = useSelector(state => state.tags.find(tag => tag.isSelected))\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <Card style={{ width: '18rem' }}>\n        <Card.Header>Settings</Card.Header>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>\n            <DurationForm selectedTag={selectedTag} />\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <TagSelect />\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <AddTag />\n          </ListGroup.Item>\n        </ListGroup>\n      </Card>\n    </div>\n  )\n}\n\nexport default Settings","import NavigationBar from './components/NavigationBar'\nimport Timer from './components/Timer'\nimport Settings from './components/Settings'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport { getAllTags } from './reducers/tagsReducer'\n\nconst App = () => {\n  const tags = useSelector(state => state.tags)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getAllTags())\n  }, [dispatch])\n\n  return (\n    <div>\n      <NavigationBar />\n      <div className=\"container mt-4 d-flex flex-column align-items-center\">\n        <h2>{tags.find((tag) => tag.isSelected)?.name}</h2>\n        <Timer />\n        <div className=\"text-center\">tags</div>\n        <Settings />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport timerReducer from './reducers/timerReducer'\nimport tagsReducer from './reducers/tagsReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nconst combinedReducer = combineReducers({\n  timer: timerReducer, tags: tagsReducer\n})\n\nconst store = createStore(combinedReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store'\nimport { Provider } from 'react-redux'\nimport './App.css'\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}